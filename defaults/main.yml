---
kafka_version: 1.0.0
kafka_scala_version: 2.11

kafka_mirror: http://apache.mirror.anlx.net/kafka
kafka_filename: "kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz"
kafka_url: "{{ kafka_mirror }}/{{ kafka_version }}/{{ kafka_filename }}"

# Where kafka actually lives
kafka_dir: /opt/kafka-{{ kafka_scala_version }}-{{ kafka_version }}

# Where kafka writes its data
kafka_data_dir: /var/lib/kafka

# Where kafka logs.
# Note this would only have effect if using the systemd service. Otherwise, it'll log to {{kafka_dir}}/logs
# See kafka-run-class.sh for more.
kafka_log_dir: /var/log/kafka

# Pass environment variables to Kafka (will end up in /etc/default/kafka and picked up by the kafka service)
kafka_heap_opts:  # Unset by default, kafka assigns values here if unset. Example: kafka_heap_opts: "-Xmx1G -Xms1G"
kafka_env: {}  # Anything else you want to set, as dict of key/value pairs.

# Add kafka/bin to PATH. Set to False for not doing it.
kafka_register_path_env: True

# List of dict (i.e. {kafka_hosts:[{host:,id:},{host:,id:},...]})
# For a cluster, you may want to have something like: kafka_hosts: "{{groups['kafka']}}"
# Where kafka is a group in your inventory file.
kafka_hosts:
  - host: "{{inventory_hostname}}"
    id: 1

# An array of zookeeper hosts
kafka_zookeeper_hosts:
  - localhost
# kafka / zookeeper connection port
kafka_zookeeper_port: 2181
zookeeper_connection_string: "{% for host in kafka_zookeeper_hosts %}{{ host }}:{{ kafka_zookeeper_port }}{% if not loop.last %},{% endif %}{% endfor %}"

# Some defaults for log4j settings (ensures consistency) - you can override them individually still
log4j_default_file_appender_class: "org.apache.log4j.DailyRollingFileAppender"
log4j_default_file_appender_date_pattern: "'.'yyyy-MM-dd-HH"
log4j_default_pattern_layout_class: "org.apache.log4j.PatternLayout"
log4j_default_conversion_pattern: "[%d] %p %m (%c)%n"

# A dict of properties for the various configurations.
# server goes for server.properties, log4j for log4j.properties, and so on.
# They replicate the defaults from Kafka and their names mirrors the ones in kafka (replace _ with .)
# You can override these individually if you set hash_behaviour=merge in your ansible.cfg file.
kafka_config:
  server:
    num_network_threads: 3
    num_io_threads: 8
    socket_send_buffer_bytes: 102400
    socket_receive_buffer_bytes: 102400
    socket_request_max_bytes: 104857600
    num_partitions: 1
    num_recovery_threads_per_data_dir: 1
    offsets_topic_replication_factor: 1
    transaction_state_log_replication_factor: 1
    transaction_state_log_min_isr: 1
    log_retention_hours: 168
    log_segment_bytes: 1073741824
    log_retention_check_interval_ms: 300000
    zookeeper_connect: "{{ zookeeper_connection_string }}"
    zookeeper_connection_timeout_ms: 6000
    group_initial_rebalance_delay_ms: 0
    # Pass in custom_settings a dict of properties not included in the default server.properties,
    # example: custom_settings: {auto.create.topics.enable: true, delete.topic.enable: true}
    custom_settings: {}
  log4j:
    log4j_rootLogger: "INFO, stdout, kafkaAppender"
    log4j_appender_stdout:
      class: "org.apache.log4j.ConsoleAppender"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_appender_kafka_appender:
      class: "{{ log4j_default_file_appender_class }}"
      date_pattern: "{{ log4j_default_file_appender_date_pattern }}"
      file: "${kafka.logs.dir}/server.log"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_appender_state_change_appender:
      class: "{{ log4j_default_file_appender_class }}"
      date_pattern: "{{ log4j_default_file_appender_date_pattern }}"
      file: "${kafka.logs.dir}/state-change.log"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_appender_request_appender:
      class: "{{ log4j_default_file_appender_class }}"
      date_pattern: "{{ log4j_default_file_appender_date_pattern }}"
      file: "${kafka.logs.dir}/kafka-request.log"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_appender_cleaner_appender:
      class: "{{ log4j_default_file_appender_class }}"
      date_pattern: "{{ log4j_default_file_appender_date_pattern }}"
      file: "${kafka.logs.dir}/log-cleaner.log"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_appender_controller_appender:
      class: "{{ log4j_default_file_appender_class }}"
      date_pattern: "{{ log4j_default_file_appender_date_pattern }}"
      file: "${kafka.logs.dir}/controller.log"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_appender_authorizer_appender:
      class: "{{ log4j_default_file_appender_class }}"
      date_pattern: "{{ log4j_default_file_appender_date_pattern }}"
      file: "${kafka.logs.dir}/kafka-authorizer.log"
      layout:
        class: "{{ log4j_default_pattern_layout_class }}"
        conversion_pattern: "{{ log4j_default_conversion_pattern }}"
    log4j_logger_org_I0Itec_zkclient_ZkClient: INFO
    log4j_logger_org_apache_zookeeper: INFO
    log4j_logger_kafka: INFO
    log4j_logger_org_apache_kafka: INFO
    log4j_logger_kafka_request_logger: "WARN, requestAppender"
    log4j_additivity_kafka_request_logger: "false"
    log4j_logger_kafka_network_RequestChannel: "WARN, requestAppender"
    log4j_additivity_kafka_network_RequestChannel: "false"
    log4j_logger_kafka_controller: "TRACE, controllerAppender"
    log4j_additivity_kafka_controller: "false"
    log4j_logger_kafka_log_LogCleaner: "INFO, cleanerAppender"
    log4j_additivity_kafka_log_LogCleaner: "false"
    log4j_logger_state_change_logger: "TRACE, stateChangeAppender"
    log4j_additivity_state_change_logger: "false"
    log4j_logger_kafka_authorizer_logger: "INFO, authorizerAppender"
    log4j_additivity_kafka_authorizer_logger: "false"
    # Pass in custom_settings a dict of properties not included in the default log4j.properties
    custom_settings: {}
